{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","fileUrl","toggleEditing","update","src","width","height","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attach","setAttach","event","fileRef","ref","child","uid","uuidv4","putString","res","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finished","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArr","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAaAA,IAASC,cARe,CACpBC,OAAQC,0CACRC,WAAYD,qCACZE,UAAWF,qBACXG,cAAeH,iCACfI,kBAAmBJ,eACnBK,MAAOL,8CAIJ,IAAMM,EAAmBT,IAEnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,OC0BxBC,EA1CC,WAAM,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,OAEeF,mBAAS,IAFxB,mBAEVG,EAFU,KAEAC,EAFA,OAGmBJ,oBAAS,GAH5B,mBAGVK,EAHU,KAGEC,EAHF,OAISN,mBAAS,IAJlB,mBAIVO,EAJU,KAIHC,EAJG,KAKXC,EAAW,SAACC,GAAO,IAAD,EACaA,EAA1BC,OAASC,EADI,EACJA,KAAMC,EADF,EACEA,MACV,UAATD,EACCV,EAASW,GACO,aAATD,GACPR,EAAYS,IAGdC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAEM,iBADW,UAITX,EAJS,gCAKIZ,EAAYwB,+BAA+BhB,EAAOE,GALtD,OAKTe,EALS,+CAOIzB,EAAY0B,2BAA2BlB,EAAOE,GAPlD,QAOTe,EAPS,eASbE,QAAQC,IAAIH,GATC,kDAWTV,EAAS,KAAMc,SAXN,0DAAH,sDAed,OACK,qCACG,uBAAMC,UAAU,YAAYT,SAAUA,EAAtC,UACC,uBAAOS,UAAU,YAAYd,SAAUA,EAAUG,KAAK,QAAQY,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACb,MAAOZ,IAC9G,uBAAOsB,UAAU,YAAYd,SAAUA,EAAUG,KAAK,WAAWY,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACb,MAAOV,IACxH,uBAAOoB,UAAU,uBAAuBC,KAAK,SAASX,MAAOR,EAAa,iBAAmB,WAC5FE,GAAS,sBAAMgB,UAAU,YAAhB,SAA6BhB,OAEvC,sBAAMgB,UAAU,aAAaI,QAThB,kBAAMrB,GAAc,SAACsB,GAAD,OAAWA,MAS5C,SAAsDvB,EAAa,SAAW,uBCD5EwB,EA5BF,WACT,IAAMC,EAAa,uCAAG,WAAOpB,GAAP,iBAAAK,EAAA,4DAGN,YAFIH,EAASF,EAAlBC,OAASC,MAGZmB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACtB,WAATpB,IACNmB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBANvB,SAQZxC,EAAYyC,gBAAgBH,GARhB,2CAAH,sDAWnB,OACK,sBAAKR,UAAU,gBAAf,UACI,cAAC,IAAD,CACLY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAElB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACI,yBAAQA,UAAU,UAAUI,QAASG,EAAelB,KAAK,SAAzD,iCAAsF,cAAC,IAAD,CAAiBuB,KAAMM,SAC7G,yBAAQlB,UAAU,UAAUI,QAASG,EAAelB,KAAK,SAAzD,iCAAsF,cAAC,IAAD,CAAiBuB,KAAMO,gB,gBC6C/GC,EAxEF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QAAa,EACL7C,oBAAS,GADJ,mBAC5B8C,EAD4B,KACnBC,EADmB,OAEH/C,mBAAS4C,EAASI,MAFf,mBAE5BC,EAF4B,KAElBC,EAFkB,KAI7BC,EAAa,uCAAG,sBAAApC,EAAA,0DACPqC,OAAOC,QAAQ,sCADR,gCAGR1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,uBAIR3D,EAAe4D,WAAWb,EAASc,SAASF,SAJpC,2CAAH,qDAQbG,EAAe,kBAAKZ,GAAW,SAACnB,GAAD,OAAWA,MAE1Cd,EAAQ,uCAAG,WAAMJ,GAAN,SAAAK,EAAA,yDACbL,EAAEM,kBACWoC,OAAOC,QAAQ,+BAFf,gCAIH1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAChDZ,KAAKC,IALA,OAQbF,GAAW,GARE,2CAAH,sDAiBd,OACA,qBAAKxB,UAAU,QAAf,SACCuB,EACD,qCACA,uBAAMhC,SAAUA,EAAUS,UAAU,sBAApC,UACA,uBACAA,UAAU,YACVd,SAbiB,SAACC,GAAO,IACNG,EACXH,EADGC,OAAQE,MAEfqC,EAAYrC,IAWhBA,MAAOoC,EACPzB,KAAK,OACLC,YAAY,oBAEZ,uBACAZ,MAAM,eACNW,KAAK,SACLD,UAAU,eAGV,sBAAMI,QAASgC,EAAepC,UAAU,oBAAxC,uBAKA,qCACA,6BAAKqB,EAASI,OACbJ,EAASc,SAAW,qBAAKG,IAAKjB,EAASc,QAASI,MAAM,OAAOC,OAAO,SACpElB,GACD,sBAAKtB,UAAU,iBAAf,UACU,sBAAMI,QAASwB,EAAf,SACE,cAAC,IAAD,CAAiBhB,KAAM6B,QAEzB,sBAAMrC,QAASgC,EAAf,SACE,cAAC,IAAD,CAAiBxB,KAAM8B,iB,QCiCxBC,EA/FM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACRnE,mBAAS,IADD,mBAC3BoE,EAD2B,KACpBC,EADoB,OAENrE,mBAAS,IAFH,mBAE3BsE,EAF2B,KAEnBC,EAFmB,KAI5BzD,EAAQ,uCAAG,WAAO0D,GAAP,qBAAAzD,EAAA,yDACD,KAAVqD,EADW,oDAIfI,EAAMxD,iBACF0C,EAAU,GACC,KAAXY,EANW,wBAOTG,EAAU5E,EACf6E,MACAC,MAFe,UAENR,EAAQS,IAFF,YAESC,gBATV,SAUGJ,EAAQK,UAAUR,EAAQ,YAV7B,cAUTS,EAVS,iBAWAA,EAAIL,IAAIM,iBAXR,QAWftB,EAXe,sBAaTd,EAAW,CACfI,KAAMoB,EACNa,UAAWC,KAAKC,MAChBC,UAAWjB,EAAQS,IACnBlB,WAjBa,UAmBT/D,EAAU0F,WAAW,UAAUC,IAAI1C,GAnB1B,QAoBfyB,EAAS,IACTE,EAAU,IArBK,4CAAH,sDAgDZ,OACA,uBAAMhD,UAAU,cAAcT,SAAUA,EAAxC,UACE,sBAAMS,UAAU,0BAAhB,UACA,uBACIA,UAAU,sBACVV,MAAOuD,EACP3D,SA9BS,SAACC,GAAO,IAETG,EACNH,EADFC,OAAQE,MAEVwD,EAASxD,IA2BPW,KAAK,OACLC,YAAY,uBACZ8D,UAAW,MAEb,uBAAOhE,UAAU,sBAAsBC,KAAK,SAASX,MAAM,aAE3D,wBAAO2E,IAAI,cAAcjE,UAAU,sBAAnC,UACA,8CACA,cAAC,IAAD,CAAiBY,KAAMsD,SAEvB,uBACElC,GAAG,cACH/B,KAAK,OACLkE,OAAO,UACPjF,SAtCY,SAACC,GAAO,IAIpBiF,EADFjF,EADFC,OAASiF,MAEW,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAc,IAEfC,EACbD,EADFE,cAAeD,OAEjB1B,EAAU0B,IAEZJ,EAAOM,cAAcR,IA2BfpD,MAAO,CACP6D,QAAS,KAGV9B,GACD,sBAAK/C,UAAU,0BAAf,UACA,qBACAsC,IAAKS,EACL/B,MAAO,CACL8D,gBAAiB/B,KAEnB,sBAAK/C,UAAU,qBAAqBI,QAnC3B,kBAAM4C,EAAU,KAmCzB,UACI,0CACA,cAAC,IAAD,CAAiBpC,KAAMmE,gBC1DpBC,EA/BF,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QAAc,EACAnE,mBAAS,IADT,mBACrBwG,EADqB,KACbC,EADa,KAY5B,OAVAC,qBAAU,WACR/G,EAAU0F,WAAW,UAAUsB,YAAW,SAAAC,GACxC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAAAzD,GAAG,oBACpCC,GAAID,EAAIC,IACLD,EAAIpC,WAETuF,EAAUI,QAEX,IAGD,gCACI,qBAAKtF,UAAU,YAAf,SACA,cAAC,EAAD,CACC4C,QAAYA,MAGb,qBAAK5B,MAAO,CAAEyE,UAAW,IAAzB,SACCR,EAAOO,KAAI,SAAC3C,GAAD,OACZ,cAAC,EAAD,CAEIxB,SAAUwB,EACVvB,QAAUuB,EAAMgB,YAAcjB,EAAQS,KAFjCR,EAAMb,aCUR0D,EA/BG,SAAC,GAAD,IAAE9C,EAAF,EAAEA,QAAF,OACZ,8BACF,qBAAI5B,MAAO,CAAE2E,QAAS,OAAQC,eAAgB,SAAUH,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAMI,GAAG,IAAI7E,MAAO,CAAE8E,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiBlF,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACE,eAAC,IAAD,CACE8E,GAAG,WACH7E,MAAO,CACL+E,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiBtF,KAAMuF,IAAQrF,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAEyE,UAAW,IAA1B,SACG7C,EAAQwD,YAAR,UACMxD,EAAQwD,YADd,kBAEG,uBCuCDC,EA9DA,SAAC,GAA2B,IAA1BzD,EAAyB,EAAzBA,QAAS0D,EAAgB,EAAhBA,YACnBC,EAAUC,cADyB,EAEG/H,mBAASmE,EAAQwD,aAFpB,mBAElCK,EAFkC,KAElBC,EAFkB,KASnCnH,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACdL,EAAEM,iBACEmD,EAAQwD,cAAgBK,EAFd,gCAGN7D,EAAQ+D,cAAc,CAC1BP,YAAaK,IAJH,OAMZH,IANY,2CAAH,sDA6Bf,OACA,sBAAKtG,UAAU,YAAf,UACA,uBAAMT,SAAYA,EAAlB,UACA,uBACCS,UAAU,YACVd,SAxBgB,SAACC,GAAO,IAEPG,EACTH,EADAC,OAASE,MAEdoH,EAAkBpH,IAqBrBW,KAAM,OACNC,YAAY,cACZZ,MAAOmH,IAER,uBACAxG,KAAK,SACLX,MAAM,iBACNU,UAAU,UACVgB,MAAO,CACDyE,UAAW,SAGjB,sBAAMzF,UAAU,2BAA4BI,QApDrB,WAClBlC,EAAY0I,UACZL,EAAQM,KAAK,KACbP,KAiDL,yBC3BeQ,EA5BE,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAYnE,EAA0B,EAA1BA,QAAS0D,EAAiB,EAAjBA,YAClC,OACE,eAAC,IAAD,WACKS,GAAc,cAAC,EAAD,CAAYnE,QAASA,IACpC,cAAC,IAAD,UACKmE,EACD,sBACC/F,MAAO,CACPgG,SAAU,IACVzE,MAAO,OACP0E,OAAQ,SACRxB,UAAW,GACXE,QAAS,OACTC,eAAgB,UAPjB,UAUA,cAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMvE,QAASA,MAEnB,cAAC,IAAD,CAAOsE,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAASvE,QAASA,EAAS0D,YAAaA,SAEjC,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,YCelCC,MArCf,WAAgB,IAAD,EACW3I,oBAAS,GADpB,mBACN4I,EADM,KACAC,EADA,OAEuB7I,oBAAS,GAFhC,mBAENsI,EAFM,KAEMQ,EAFN,OAGiB9I,mBAAS,MAH1B,mBAGNmE,EAHM,KAGG4E,EAHH,KA8Bb,OAzBArC,qBAAU,WACRjH,EAAYuJ,oBAAmB,SAACC,GAC5BA,GACFH,GAAc,GACdC,EAAW,CACTpB,YAAasB,EAAKtB,YAClB/C,IAAKqE,EAAKrE,IACVsD,cAAe,SAACgB,GAAD,OAASD,EAAKf,cAAcgB,OAG7CJ,GAAc,GAEdD,GAAQ,QAET,IAYH,mCACCD,EAAO,cAAC,EAAD,CAAWf,YAXA,WACjB,IAAMoB,EAAOxJ,EAAY0J,YACzBJ,EAAY,CACRpB,YAAasB,EAAKtB,YAClB/C,IAAKqE,EAAKrE,IACVsD,cAAe,SAACgB,GAAD,OAASD,EAAKf,cAAcgB,OAMJZ,WAAcA,EAAYnE,QAASA,IAAY,oB,MClC9FiF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b2de1910.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\n const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n    appId: process.env.REACT_APP_APP_ID\n  };\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, {useState}  from 'react';\nimport { authService } from 'fbase';\n\nconst AuthForm =()=> {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const onChange = (e) => {\n        const {target: {name, value},} = e;\n        if(name === 'email') {\n            setEmail(value);\n        } else if (name === 'password') {\n            setPassword(value);\n        }\n    }\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        let data;\n        try{\n        if (newAccount) {\n            data = await authService.createUserWithEmailAndPassword(email, password);\n        } else {\n            data = await authService.signInWithEmailAndPassword(email, password);\n        }   \n        console.log(data);         \n        } catch (error) {\n            setError(error.message);\n        }\n    }\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n         <>\n            <form className=\"container\" onSubmit={onSubmit}>\n             <input className=\"authInput\" onChange={onChange} name=\"email\" type='text' placeholder=\"Email\" required value={email}/>\n             <input className=\"authInput\" onChange={onChange} name=\"password\" type='password' placeholder=\"Password\" required value={password}/>\n             <input className=\"authInput authSubmit\" type='submit' value={newAccount ? \"Create Account\" : \"Log In\"}/>\n             {error && <span className=\"authError\">{error}</span>}\n             </form>\n             <span className=\"authSwitch\" onClick={toggleAccount}>{newAccount ? \"Log In\" : \"Create Account\"}</span>\n            </>            \n    );\n\n};\n\nexport default AuthForm;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (e) => {\n        const {target: {name}} = e;\n        let provider;\n        if(name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n        };\n\n    return (\n         <div className=\"authContainer\">\n             <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n             <AuthForm />\n             <div className=\"authBtns\">\n                 <button className=\"authBtn\" onClick={onSocialClick} name=\"google\">Continue with Google<FontAwesomeIcon icon={faGoogle} /></button>\n                 <button className=\"authBtn\" onClick={onSocialClick} name=\"github\">Continue with Github<FontAwesomeIcon icon={faGithub} /></button>        \n             </div>\n         </div>\n    );\n}\nexport default Auth;","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Tweet =( {tweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\n\n    const onDeleteClick = async ()=> {\n        const ok = window.confirm(\"Are you sure to delete this Tweet?\")\n        if(ok) {\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\n            await storageService.refFromURL(tweetObj.fileUrl).delete();\n        }\n    }\n\n    const toggleEditing =()=> setEditing((prev) => !prev);\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        const edit = window.confirm(\"Do you want to save change?\")\n        if(edit) {\n            await dbService.doc(`tweets/${tweetObj.id}`).update({\n                text:newTweet\n            });\n        }\n        setEditing(false);\n    };\n\n    const onChange = (e) => {\n        const {target:{value},\n        } = e;\n        setNewTweet(value);\n    }\n\n    return (\n    <div className=\"nweet\">\n    {editing ? (\n    <>\n    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n    <input\n    className=\"formInput\"\n    onChange={onChange}\n    value={newTweet} \n    type=\"text\" \n    placeholder=\"Edit your Tweet\"\n    />\n    <input\n    value=\"Update Tweet\"\n    type=\"submit\"\n    className=\"formBtn\"\n    />\n    </form>\n    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n    </span>\n    </>\n    ): (\n    <>\n    <h4>{tweetObj.text}</h4>\n    {tweetObj.fileUrl && <img src={tweetObj.fileUrl} width='50px' height='50px'/>}\n    {isOwner && (\n    <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n    </div>\n    )}\n    </>\n    )}\n    </div>\n    );\n}\nexport default Tweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\n const TweetFactory =({userObj}) => {\n  const [tweet, setTweet] = useState(\"\");  \n  const [attach, setAttach] = useState(\"\");\n  \n  const onSubmit = async (event) => {\n    if (tweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let fileUrl = \"\";\n    if (attach !== \"\") {\n    const fileRef = storageService\n    .ref()\n    .child(`${userObj.uid}/${uuidv4()}`);\n    const res = await fileRef.putString(attach, 'data_url');\n    fileUrl= await res.ref.getDownloadURL();\n    }\n    const tweetObj = {\n      text: tweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      fileUrl,\n    }\n    await dbService.collection(\"tweets\").add(tweetObj);\n    setTweet(\"\");\n    setAttach(\"\");\n  };\n\n  const onChange = (e) => {\n        const {\n          target:{value},\n        } = e;\n        setTweet(value);\n    }\n\n  const onFileChange =(e) => {\n    const {\n      target: {files},\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finished) => {\n      const {\n        currentTarget:{result},\n      } = finished;\n      setAttach(result);\n    };\n    reader.readAsDataURL(theFile);\n  }\n\n  const onClear =() => setAttach(\"\");\n\n    return (\n    <form className=\"factoryForm\" onSubmit={onSubmit}>\n      <div  className=\"factoryInput__container\" >\n      <input\n          className=\"factoryInput__input\"\n          value={tweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input className=\"factoryInput__arrow\" type=\"submit\" value=\"Tweet\" />  \n        </div>\n        <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n        <input\n          id=\"attach-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          style={{\n          opacity: 0,\n        }}\n        /> \n        {attach && (\n        <div className=\"factoryForm__attachment\">\n        <img \n        src={attach} \n        style={{\n          backgroundImage: attach,\n        }}/>\n        <div className=\"factoryForm__clear\" onClick={onClear}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n        )}\n      </form>\n    )\n}\n\nexport default TweetFactory;","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Tweet from '../components/Tweet';\nimport TweetFactory from \"components/TweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    dbService.collection('tweets').onSnapshot(snapshot => {\n      const tweetArr = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setTweets(tweetArr);\n    })\n  }, []);\n\n  return (\n    <div>\n        <div className=\"container\">\n        <TweetFactory \n         userObj = { userObj }\n         /> \n         </div>\n        <div style={{ marginTop: 30 }}>\n        {tweets.map((tweet) => (\n        <Tweet \n            key={tweet.id} \n            tweetObj={tweet}\n            isOwner= {tweet.creatorId === userObj.uid}\n          />\n        ))}\n        </div>\n    </div>\n  );\n};\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation =({userObj})=> (\n      <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { authService } from 'fbase';\n\n\n// export default () => <span>Profile</span>\nconst Profile =({userObj, refreshUser})=> {\n const history = useHistory();\n const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n const onLogOutClick = () => {\n     authService.signOut();\n     history.push(\"/\");\n     refreshUser();\n }\n const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n };\n\n const onChange =(e) => {\n     const {\n         target: {value},\n     } = e;\n    setNewDisplayName(value); \n    }\n\n// const getMyTweets = async () => {\n//     const tweets = await dbService\n//     .collection(\"tweets\")\n//     .where(\"creatorId\",\"==\", userObj.uid)\n//     .orderBy(\"createdAt\")\n//     .get();\n//     console.log(tweets.docs.map(doc => doc.data()));\n//  }\n// useEffect(() => {\n//     getMyTweets();\n// }, [])\n\nreturn (\n<div className=\"container\">\n<form onSubmit = {onSubmit}>\n<input\n className=\"formInput\"\n onChange = {onChange}\n type =\"text\"\n placeholder=\"DisplayName\"\n value={newDisplayName}\n />\n<input    \ntype=\"submit\"\nvalue=\"Update Profile\"\nclassName=\"formBtn\"\nstyle={{\n      marginTop: 10,\n}}/>\n</form>\n<span className=\"formBtn cancelBtn logOut\"  onClick={onLogOutClick}>\n  Log Out\n</span>\n</div>\n);\n}\nexport default Profile;","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation';\nimport Profile from '../routes/Profile';\n\nconst AppRouter= ({isLoggedIn, userObj, refreshUser}) => {\n      return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                <div\n                 style={{\n                 maxWidth: 890,\n                 width: \"100%\",\n                 margin: \"0 auto\",\n                 marginTop: 80,\n                 display: \"flex\",\n                 justifyContent: \"center\",\n                 }}\n                >\n                <Route exact path='/'>\n                    <Home userObj={userObj}/>\n                </Route>\n                <Route exact path='/profile'>\n                    <Profile userObj={userObj} refreshUser={refreshUser}/>\n                </Route>\n                </div>) : (<Route exact path='/'><Auth/></Route>)}\n            </Switch>\n        </Router>\n    )\n}\n\nexport default AppRouter;","import React, {useState} from 'react';\nimport {useEffect} from 'react';\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(()=> {\n    authService.onAuthStateChanged((user) => {\n    if (user) {\n      setIsLoggedIn(true);\n      setUserObj({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args)=> user.updateProfile(args),\n      });\n    } else {\n      setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, [])\n\n  const refreshUser =()=> {\n    const user = authService.currentUser;\n    setUserObj ({\n        displayName: user.displayName,\n        uid: user.uid,\n        updateProfile: (args)=> user.updateProfile(args),\n    });\n  };\n\n  return (\n  <>\n  {init ? <AppRouter refreshUser={refreshUser} isLoggedIn = {isLoggedIn} userObj={userObj}/>: \"Initializing..\"}\n  {/* <footer>&copy; {new Date().getFullYear()} ReactTweet</footer> */}\n  </>);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport '../src/style/app.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}